[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "qualia-codegen-plugin-som"
authors = [
    {name = "Pierre-Emmanuel Novac", email = "penovac@unice.fr"},
]
description = "Generate portable C inference code from PyTorch model for Self-Organizing Maps"
readme = "README.md"
requires-python = ">=3.9,<3.14"
license.text = "AGPL-3.0-or-later"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
]
dependencies = [
    'numpy',
    'qualia-codegen-core',
    'typing_extensions; python_version < "3.12"',
]
dynamic = ["version"]

[project.urls]
homepage = "https://naixtech.unice.fr/gitlab/qualia/qualia-codegen-plugin-som"

[project.optional-dependencies]
tests = ['pytest', 'pytest-xdist']
lint = ['ruff']
typecheck = ['mypy', 'pyright']
docs = ['pdm', 'sphinx', 'sphinx-rtd-theme', 'myst-parser']

[tool.pdm]

[tool.pdm.resolution]
respect-source-order = true

[[tool.pdm.source]]
name = "qualia-nightly"
url = "https://naixtech.unice.fr/devpi/penovac/qualia-nightly/+simple"
verify_ssl = false

[tool.pdm.version]
source = "scm"

[tool.ruff]
extend-exclude = ["third_party"]
lint.select = ["ALL"]
#select = ["E", "F", "B"]
lint.ignore = [
  "ANN101", # Ignore missing type annotation for self in methods
  "ANN102", # Ignore missing type annotation for self in class methods
  "D1", # Ignore missing pydoc
  "N999" # Our module have the same name as the contained class in PascalCase
]
line-length = 131
target-version = "py39"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.mypy]
files = ["src"]
exclude = ["third_party", "examples"]
python_version = 3.9
strict = true
show_column_numbers = true
pretty = true
plugins = "numpy.typing.mypy_plugin"

[tool.pyright]
include = ["src"]
exclude = ["**/third_party", "**/examples"]
pythonVersion = "3.9"
typeCheckingMode = "strict"
reportCallInDefaultInitializer = "warning"
reportImplicitOverride = "warning"
reportImplicitStringConcatenation = "warning"
reportMissingSuperCall = "warning"
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedCallResult = "warning"
